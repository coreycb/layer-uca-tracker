#!/usr/bin/env python
#
# Daemon for publishing Ubuntu Cloud Archive reports.
#

import httplib2
import logging
import os
import shutil
import subprocess
import sys

BASE_DIR = '/opt/ubuntu-reports/server/cloud-archive/version-tracker/'

def gather_versions(upstream, release):
    ga_versions = os.path.join(BASE_DIR, 'gather-versions.py')
    data_dir = os.path.join(BASE_DIR, 'data-dir')
    cmd = [ga_versions,
           '--output_dir={}'.format(data_dir),
           release,
          ]
    if upstream:
        cmd.append('--upstream')
    subprocess.check_call(cmd)

def generate_report(upstream, release):
    ca_versions = os.path.join(BASE_DIR, 'ca-versions.py')
    data_dir = os.path.join(BASE_DIR, 'data-dir')
    cmd = [ca_versions,
           '--json_dir={}'.format(data_dir),
           '--os_release={}'.format('pike'),
          ]
    if upstream:
        cmd.append('--upstream')
        fname = '{}_upstream_versions.html'.format(release)
    else:
        fname = '{}_versions.html'.format(release)
    html_file = os.path.join('/usr/share/nginx/www/', fname)
    cmd.append('--output={}'.format(html_file))
    subprocess.check_call(cmd)

def main():
    logging.basicConfig(filename='/var/log/uca-tracker/tracker.log',
                        level=logging.DEBUG)
    while True:
{% if base_releases %}
{% for release in base_releases %}
        logging.debug("Running base version-tracker for {{ release }}")
        gather_versions(upstream=False, release='{{ release }}')
        generate_report(upstream=False, release='{{ release }}')
        logging.debug("Published {{ release }}_versions.html")
{% endfor %}
{% endif %}

{% if upstream_releases %}
{% for release in upstream_releases %}
        logging.debug("Running upstream version-tracker for {{ release }}")
        gather_versions(upstream=True, release='{{ release }}')
        generate_report(upstream=True, release='{{ release }}')
        logging.debug("Published {{ release }}_upstream_versions.html")
{% endfor %}
{% endif %}

if __name__ == "__main__":
    main()
